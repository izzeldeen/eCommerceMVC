@model eCommerceMVC.Areas.Dashboard.ViewModels.UserDetailsViewModel

@if (Model != null && Model.User != null)
{
    <form id="frmUserInfo">
        <input type="hidden" name="ID" value="@Model.User.Id" />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Full Name</label>
            <div class="col-sm-10">
                <input name="FullName" type="text" class="form-control" value="@Model.User.FullName" required>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Phone Number</label>
            <div class="col-sm-10">
                <input name="PhoneNumber" type="text" class="form-control" value="@Model.User.PhoneNumber">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Country</label>
            <div class="col-sm-10">
                <input name="Country" type="text" class="form-control" value="@Model.User.Country">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">City</label>
            <div class="col-sm-10">
                <input name="City" type="text" class="form-control" value="@Model.User.City">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Address</label>
            <div class="col-sm-10">
                <textarea name="Address" class="form-control">@Model.User.Address</textarea>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Zip Code</label>
            <div class="col-sm-10">
                <input name="ZipCode" type="text" class="form-control" value="@Model.User.ZipCode">
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Email</label>
            <div class="col-sm-10">
                <input type="email" class="form-control" value="@Model.User.Email" required readonly disabled>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Username</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" value="@Model.User.UserName" required readonly disabled>
            </div>
        </div>
        <div class="form-group row">
            <div class="offset-sm-2 col-sm-10">
                <div class="btn-group float-right" role="group">
                    <button id="btnUpdate" type="button" class="btn btn-success"><i class="fas fa-edit mr-1"></i> Update</button>
                    <button id="btnDelete" type="button" class="btn btn-danger"><i class="fas fa-trash-alt mr-1"></i> Delete</button>
                </div>
            </div>
        </div>
    </form>

    <script>
        $("#frmUserInfo").validate({
            errorClass: "alert alert-danger",
            errorElement: "div",
            rules: {
                FullName: {
                    required: true,
                    minlength: 3,
                    maxlength: 25
                },
                Country: {
                    required: true,
                },
                City: {
                    required: true,
                },
                Address: {
                    required: true,
                },
            },
            messages: {
                FullName: {
                    required: "Full Name is required.",
                    minlength: "Minimum Length is 3.",
                    maxlength: "Maximum Length is 25."
                },
                Country: {
                    required: "Country is required.",
                },
                City: {
                    required: "City is required.",
                },
                Address: {
                    required: "Address is required.",
                },
            },
            highlight: function (element, errorClass) {
                $(element).removeClass(errorClass);
            }
        });

        $("#btnUpdate").click(function () {
            if ($("#frmUserInfo").valid()) {
                $("#dtLoader").show();
                $("#response-holder").hide();

                $.ajax({
                    url: "@Url.EditAction("Users")",
                    method: "post",
                    data: $("#frmUserInfo").serialize()
                })
                .done(function (response) {
                    $("#dtLoader").hide();
                    $("#response-holder").show();

                    if (response.Success) {
                        swal("Success!", "User info updated.", "success");
                    }
                    else {
                        swal("Error!", "Can't update user info.", "error");
                    }
                });
            }
		});

		$("#btnDelete").click(function () {
			swal({
				title: "Are you sure you want to delete this user?",
				icon: "warning",
				buttons: true,
				dangerMode: true,
			})
			.then((willDelete) => {
				if (willDelete) {
					$("#dtLoader").show();
					$("#response-holder").hide();

					$.ajax({
						url: "@Url.DeleteAction("Users")",
                        method: "post",
                        data: {
                            userID : "@Model.User.Id"
                        }
					})
					.done(function (response) {
						if (response.Success) {
							window.location.href = "@Url.ListAction("Users")";
						}
						else {
							swal("Error!", "An error occured. Can't delete user.", "error");
						}
					});
				}
			});
		});
    </script>
}