@model eCommerceMVC.Areas.Dashboard.ViewModels.RoleDetailsViewModel

@if (Model != null && Model.Role != null)
{
    <form id="role-form">
        <input type="hidden" name="roleID" value="@Model.Role.Id" />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Name</label>
            <div class="col-sm-10">
                <input name="roleName" type="text" class="form-control" value="@Model.Role.Name" required @(Model.Role.Name.ToLower().Equals("administrator") ? "disabled" : string.Empty)>
            </div>
        </div>

        @if (!Model.Role.Name.ToLower().Equals("administrator"))
        {
            <div class="form-group row">
                <div class="offset-sm-2 col-sm-10">
                    <div class="btn-group float-right" role="group">
                        <button id="btnUpdate" type="button" class="btn btn-success @(Model.Role.Name.ToLower().Equals("administrator") ? "disabled" : string.Empty)"><i class="fas fa-edit mr-1"></i> Update</button>
                        <button id="btnDelete" type="button" class="btn btn-danger @(Model.Role.Name.ToLower().Equals("administrator") ? "disabled" : string.Empty)"><i class="fas fa-trash-alt mr-1"></i> Delete</button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="form-group row">
                <div class="offset-sm-2 col-sm-10">
                    <div class="alert alert-danger" role="alert">
                        This role is not allowed to be updated or deleted because it is being used for authorization.
                    </div>
                </div>
            </div>
        }
    </form>

    <script>
        $("#role-form").validate({
            errorClass: "alert alert-danger",
            errorElement: "div",
            rules: {
                roleName: {
                    required: true,
                    minlength: 3,
                    maxlength: 25
                },
            },
            messages: {
                roleName: {
                    required: "Role Name is required.",
                    minlength: "Minimum Length is 3.",
                    maxlength: "Maximum Length is 25."
                },
            },
            highlight: function (element, errorClass) {
                $(element).removeClass(errorClass);
            }
        });
        
        $("#btnUpdate").click(function () {
            if ($("#role-form").valid()) {
                $.ajax({
                    url: "@Url.EditAction("Roles")",
                    method: "post",
                    data: $("#role-form").serialize()
                })
                .done(function (response) {
                    if (response.Success) {
		    			swal("Success!", "Role info updated.", "success");
                    }
                    else {
                        swal("Error!", response.Message, "error");
                    }
                });
            }
        });

		$("#btnDelete").click(function () {
			swal({
				title: "Are you sure you want to delete this role?",
				icon: "warning",
				buttons: true,
				dangerMode: true,
			})
			.then((willDelete) => {
				if (willDelete) {
					$("#dtLoader").show();
					$("#response-holder").hide();

					$.ajax({
						url: "@Url.DeleteAction("Roles")",
                        method: "post",
                        data: {
                            roleID : "@Model.Role.Id" 
                        }
					})
					.done(function (response) {
						if (response.Success) {
							window.location.href = "@Url.ListAction("Roles")";
						}
						else {
							swal("Error!", response.Message, "error");
						}
					});
				}
			});
		});
    </script>
}