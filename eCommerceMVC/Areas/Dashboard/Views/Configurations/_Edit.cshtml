@using eCommerce.Entities
@model eCommerce.Entities.Configuration


<div class="modal-header">
    <h5 class="modal-title">Edit Configuration @(Model != null ? string.Format(": {0}", Model.Key) : string.Empty)</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
@if (Model != null)
{
    <form id="editForm" method="post">
        <div class="modal-body">
            <input type="hidden" name="Key" value="@Model.Key" />

            <div class="form-group">
                <label>
                    Configuration Type
                </label>
                <select class="form-control" name="ConfigurationType">
                    <option value="0">- None -</option>
                    @foreach (var configurationType in Enum.GetValues(typeof(ConfigurationType)).Cast<ConfigurationType>())
                    {
                        var selected = Model.ConfigurationType == (int)configurationType ? "selected" : string.Empty;
                        <option value="@((int)configurationType)" @selected>@configurationType.ToString()</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label>
                    Value
                </label>
                <input class="form-control" name="Value" value="@Model.Value" />
            </div>

            <div class="form-group">
                <label>
                    Description
                </label>
                <textarea class="form-control" name="Description" placeholder="Add Description." rows="3">@Model.Description</textarea>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button class="btn btn-success" type="button" id="saveButton">
                Save
            </button>
        </div>
    </form>

    <script>

	$("#editForm").validate({
		errorClass: "alert alert-danger",
		errorElement: "div",
        rules: {
            ConfigurationType: {
                required: true,
            },
            Value: {
                required: true,
            },
            Description: {
                required: false,
				minlength: 10
			}
		},
        messages: {
            ConfigurationType: {
                required: "Select Configuration Type.",
            },
            Value: {
                required: "Configuration Value is required.",
            },
			Description: {
				minlength: "Minimum Length is 10.",
			}
		},
		highlight: function (element, errorClass) {
			$(element).removeClass(errorClass);
		}
	});

	$("#saveButton").click(function () {
		if ($("#editForm").valid())
		{
			$.ajax({
			    url: "@Url.EditAction("Configurations")",
			    method: "post",
			    data: $("#editForm").serialize()
			})
			.done(function (response) {
				$("#listingArea").html(response);
				$('#formModal').modal('toggle');
			});
		}
	});

    </script>
}
else
{
    <div class="alert alert-danger" role="alert">
        Sorry. No Configuration found.
    </div>
}