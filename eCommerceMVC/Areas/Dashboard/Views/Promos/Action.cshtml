@using eCommerce.Entities;
@model eCommerceMVC.Areas.Dashboard.ViewModels.PromoActionViewModel

<div class="row mt-2">
    <div class="col-lg-12 col-md-12">
        <h2>
            @Model.PageTitle
        </h2>
        <p>
            @Model.PageDescription
        </p>
        <hr />
    </div>
    <div class="col-lg-12">
        <form id="actionForm" method="post">
            <input type="hidden" name="ID" value="@Model.ID" />

            <div class="form-group">
                <label>
                    Name
                </label>
                <input class="form-control" name="Name" value="@Model.Name" />
            </div>

            <div class="form-group">
                <label>
                    Description
                </label>
                <textarea class="form-control" name="Description" placeholder="Add Description." rows="3">@Model.Description</textarea>
            </div>

            <div class="form-group">
                <label>
                    Code
                </label>
                <input class="form-control" name="Code" value="@Model.Code" />
            </div>

            <div class="form-group">
                <label>
                    Promo Type
                </label>
                <select class="form-control" name="PromoType" id="PromoType">
                    @foreach (var _promoType in Enum.GetValues(typeof(PromoTypes)).Cast<PromoTypes>())
                    {
                        var selected = Model.PromoType == (int)_promoType ? "selected" : string.Empty;
                        <option value="@((int)_promoType)" @selected>@_promoType.ToString()</option>
                    }
                </select>
                <div rel-promotype="@((int)PromoTypes.Amount)" class="alert alert-info mt-2" role="alert" style="@(Model.PromoType == ((int)PromoTypes.Amount) ? string.Empty : "display:none")">
                    Amount Promo Type will give discount of specified value as amount from total amount of order.
                </div>
                <div rel-promotype="@((int)PromoTypes.Percentage)" class="alert alert-warning mt-2" role="alert" style="@(Model.PromoType == ((int)PromoTypes.Percentage) ? string.Empty : "display:none")">
                    Percentage Promo Type will give discount of specified value in percentage of total amount of order.
                </div>
            </div>

            <div class="form-group">
                <label>
                    Value
                </label>
                <input class="form-control" name="Value" value="@Model.Value" />
            </div>

            <div class="form-group">
                <label>
                    Valid Till
                </label>
                <input class="form-control" name="ValidTill" value="@Model.ValidTill" />
            </div>

            <hr />
            <div class="form-group">

                @if (Model.ID > 0)
                {
                    <button class="btn btn-success" type="submit" id="actionButton">
                        <i class="fas fa-edit mr-1"></i>
                        Update
                    </button>
                    <button class="deleteButton btn btn-danger" type="button" data-id="@Model.ID">
                        <i class="fas fa-trash-alt mr-1"></i>
                        Delete
                    </button>
                }
                else
                {
                    <button class="btn btn-success" type="submit" id="actionButton">
                        <i class="fas fa-plus mr-1"></i>
                        Save
                    </button>
                }
                <a class="btn btn-secondary" href="@Url.ListAction("Promos")">
                    <i class="fas fa-angle-double-left mr-1"></i>
                    Cancel
                </a>
            </div>
        </form>
    </div>
</div>

<script>

    $("#PromoType").change(function () {
        debugger;
        $('[rel-promotype]').hide();
        $('[rel-promotype=' + $(this).val() + ']').show();
    });

    $('input[name="ValidTill"]').datepicker();
    
    function removeRow(column) {
        $(column).parents("tr").remove();
    }

    $("#actionForm").validate({
        errorClass: "alert alert-danger",
        errorElement: "div",
        rules: {
            Name: {
                required: true,
                minlength: 5,
                maxlength: 150
            },
            PromoType: {
                required: true
            },
            Description: {
                minlength: 20
            },
            Code: {
                required: true,
                minlength: 1,
                maxlength: 50
            },
            Value: {
                required: true,
                range: [1, 10000000]
            }
        },
        messages: {
            Name: {
                required: "Name is required.",
                minlength: "Minimum Length is 15.",
                maxlength: "Maximum Length is 150."
            },
            PromoType: {
                required: "Please select Promo Type."
            },
            Description: {
                minlength: "Minimum Length is 20.",
            },
            Code: {
                required: "Please add the code for promo.",
                minlength: "Minimum Length is 20.",
            },
            Value: {
                required: "Promo Value is required.",
                range: "Value must be between 1 to 10000000.",
            }
        },
        highlight: function (element, errorClass) {
            $(element).removeClass(errorClass);
        }
    });

    $("#actionForm").submit(function (e) {
        if ($("#actionForm").valid()) {
            $.ajax({
					url: "@(Model.ID > 0 ? Url.EditAction("Promos") : Url.CreateAction("Promos"))",
                    type: "post",
                    data: $("#actionForm").serialize()
				})
                .done(function (response) {
                    if (response != null && response.Success != undefined && response.Success) {
                        window.location.href = "@Url.ListAction("Promos")";
				    }
				    else {
                        swal("Error!", response.Message, "error");
				    }
				});
        }

        e.preventDefault();
    });

    $(".deleteButton").click(function () {
        var recordID = $(this).attr("data-id");

        swal({
			title: "Are you sure you want to delete this record?",
			icon: "warning",
			buttons: true,
			dangerMode: true,
		})
		.then((willDelete) => {
			if (willDelete) {
				$("#dtLoader").show();
				$("#response-holder").hide();

				$.ajax({
					url: "@Url.DeleteAction("Promos")",
                    type: "post",
                    data: { id: recordID }
				})
                .done(function (response) {
                    if (response != null && response.Success != undefined && response.Success) {
                        window.location.href = "@Url.ListAction("Promos")";
				    }
				    else {
                        swal("Error!", response.Message, "error");
				    }
				});
			}
		});
    });

</script>