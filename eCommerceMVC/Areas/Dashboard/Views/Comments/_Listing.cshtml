@model eCommerceMVC.Areas.Dashboard.ViewModels.CommentsListingViewModel

@if (Model != null && Model.Comments != null && Model.Comments.Count > 0)
{
    <hr />

    foreach (var comment in Model.Comments)
    {
        var defaultStars = 5 - comment.Rating;

        var commentedProduct = Model.CommentedProducts != null ? Model.CommentedProducts.FirstOrDefault(x => x.ID == comment.RecordID) : null;

        <div class="row">
            <div class="col-md-2 text-center">
                @Html.UserAvatar(comment.User.Picture, "img rounded-circle img-fluid", style: "height:105px; width:105px;", alt: "User Avatar")
            </div>
            <div class="col-md-9">
                <p>
                    <a class="float-left" href="@Url.UserDetails(comment.UserID)">
                        <strong>
                            @comment.User.FullName
                        </strong>
                    </a>
                    <span class="float-right mb-2">
                        @comment.TimeStamp
                    </span>
                </p>
                <div class="clearfix"></div>
                <p>
                    @comment.Text
                </p>
                <span class="text-warning">
                    @for (int i = 1; i <= comment.Rating; i++)
                    {
                        <i class="fas fa-star"></i>
                    }

                    @for (int i = 1; i <= defaultStars; i++)
                    {
                        <i class="far fa-star"></i>
                    }
                </span>

                @if (commentedProduct != null)
                {
                    <span class="float-right">
                        <a href="@Url.ProductDetails(commentedProduct.Category.Name.ToLower().SanitizeString(), comment.RecordID)" target="_blank">
                            @commentedProduct.Name
                        </a>
                    </span>
                }
            </div>
            <div class="col-md-1 text-center">
                <button data-id="@comment.ID" class="btn btn-danger m-2 btnDeleteComment"><i class="fas fa-trash-alt mr-1"></i> Delete</button>
            </div>
        </div>
        <hr />
    }

    if (Model.Pager != null && Model.Pager.TotalPages > 1)
    {
        <nav>
            <ul class="pagination justify-content-center">

                @if (Model.Pager.CurrentPage == 1)
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Comments(Model.SearchTerm, pageNo: Model.Pager.CurrentPage - 1)">Previous</a>
                    </li>
                }

                @for (int page = Model.Pager.StartPage; page < Model.Pager.EndPage + 1; page++)
                {
                    var active = page == Model.Pager.CurrentPage ? "active" : string.Empty;

                    <li class="page-item @active">
                        <a class="page-link" href="@Url.Comments(Model.SearchTerm, pageNo: page)">
                            @page
                        </a>
                    </li>
                }

                @if (Model.Pager.CurrentPage == Model.Pager.EndPage)
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Comments(Model.SearchTerm, pageNo: Model.Pager.CurrentPage + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }

    <script>
        $(".btnDeleteComment").click(function () {
            var recordID = $(this).attr("data-id");

            swal({
		    	title: "Are you sure you want to delete this record?",
		    	icon: "warning",
		    	buttons: true,
		    	dangerMode: true,
		    })
		    .then((willDelete) => {
		    	if (willDelete) {
		    		$("#dtLoader").show();
		    		$("#response-holder").hide();

		    		$.ajax({
		    			url: "@Url.DeleteAction("Comments")",
                        type: "post",
                        data: { id: recordID }
		    		})
                    .done(function (response) {
                        if (response != null && response.Success != undefined && response.Success) {
                            window.location.href = "@Url.ListAction("Comments")";
		    		    }
		    		    else {
                            swal("Error!", response.Message, "error");
		    		    }
		    		});
		    	}
		    });
        });
    </script>
}
else
{
    <div class="alert alert-warning" role="alert">
        No comments found.
    </div>
}